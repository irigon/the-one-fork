#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = Group.router:%%Group.router%%_Group3.waitTime:%%Group3.waitTime%%_Group.bufferSize:%%Group.bufferSize%%_Group3.speed:%%Group3.speed%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43k ~= 12h
Scenario.endTime = 1000

# transmit speed of 2 Mbps = 50kBps
yellowInterface.type = SimpleBroadcastInterface
yellowInterface.transmitSpeed = 10M
yellowInterface.transmitRange = 10
blueInterface.type = SimpleBroadcastInterface
blueInterface.transmitSpeed = 10M
blueInterface.transmitRange = 10
redInterface.type = SimpleBroadcastInterface
redInterface.transmitSpeed = 10M
redInterface.transmitRange = 10
fourthinterface.type = SimpleBroadcastInterface
fourthinterface.transmitSpeed = 10M
fourthinterface.transmitRange = 10


Scenario.nrofHostGroups = 10

# common settings for all groups
Group.groupID = p
Group.nrofApplications = 0
Group.router = ContactGraphRouter
Group.bufferSize = 10M
Group.movementModel = MapRouteMovement
Group.routeType = 1
Group.waitTime = 10, 30
Group.speed = 3, 5
Group.nrofHosts = 1
Group.nrofInterfaces = 1
Group.msgTtl = 5
#Group.msgTtl = 10
ProphetRouter.secondsInTimeUnit = 1
#Group.sendQueue = 2

# p0
Group1.routeFile = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/1.wkt
Group1.interface1 = fourthinterface
# p1
Group2.routeFile = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/2.wkt
Group2.interface1 = fourthinterface
# p2
Group3.routeFile = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/3.wkt
Group3.interface1 = redInterface
Group3.waitTime = 1,1
Group3.speed = 15,30
# p3
Group4.routeFile = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/4.wkt
Group4.interface1 = yellowInterface
# p4
Group5.routeFile = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/5.wkt
Group5.interface1 = blueInterface

Group6.groupID = x
Group6.movementModel = StationaryMovement
Group6.nodeLocation = 0, 50 
Group6.nrofInterfaces = 3
Group6.interface1 = yellowInterface
Group6.interface2 = redInterface
Group6.interface3 = fourthinterface
Group7.groupID = x
Group7.movementModel = StationaryMovement
Group7.nodeLocation = 50, 50 
Group7.nrofInterfaces = 3
Group7.interface1 = blueInterface
Group7.interface2 = redInterface
Group7.interface3 = fourthinterface
Group8.groupID = x
Group8.interface1 = fourthinterface
Group8.movementModel = StationaryMovement
Group8.nodeLocation = 0, 0 
Group9.groupID = x
Group9.movementModel = StationaryMovement
Group9.interface1 = fourthinterface
Group9.nodeLocation = 50, 0
Group10.groupID = x
Group10.movementModel = StationaryMovement
Group10.nodeLocation = 25, 95
Group10.nrofInterfaces = 2
Group10.interface1 = yellowInterface
Group10.interface2 = blueInterface

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 5
MapBasedMovement.mapFile1 = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/1.wkt
MapBasedMovement.mapFile2 = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/2.wkt
MapBasedMovement.mapFile3 = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/3.wkt
MapBasedMovement.mapFile4 = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/4.wkt
MapBasedMovement.mapFile5 = /home/jose/Programming/Java/the-one-scripts/data/RoleBasedRouting/5.wkt


## Message creation parameters
# How many event generators
Events.nrof = 700
Events1.class = MessageEventGenerator
Events1.time = 100, 900
Events1.size = 1M
Events1.interval = 10, 20 
Events1.hosts = 9, 10
Events1.tohosts = 7, 9
Events1.prefix = M

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
#MovementModel.worldSize = 4500, 3400
MovementModel.worldSize = 200, 200
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 0

# how many reports to load
#Report.nrofReports = 3
Report.nrofReports = 1
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = /home/jose/Programming/Java/the-one-scripts/reports/
Report.report1 = MessageStatsReport
#Report.report2 = CGRScheduledPathReport
#Report.report3 = MessagePathReport


## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.connectionAlg = 2
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true
# choose between volume, firstHop, residual, or graph 
ContactGraphRouter.capacityMode = residual
# options for path selection: earliestTransmission, latestTransmission, leastHops, mostHops, mostRemainingCapacity, leastRemainingCapacity 
ContactGraphRouter.pathSelection = earliestTransmission
#set if the min and max hop count of a path should be considered and what the boundaries are 
ContactGraphRouter.minHopCount = 0
ContactGraphRouter.maxHopCount = 10
# if the next hop is the destination hop of a message, this message will be sent first (boolean to enable/disable) 
ContactGraphRouter.directTransfer = true
# since overscheduling is one of cgrs major problems a couple of options are offered to manipulate the order of sent messages: leastRemainingHops, mostRemainingHops, leastTTL, mostTTL 
ContactGraphRouter.messageSchedule = leastRemainingHops
# nextHopDestination... messages which are destinated for the next hop are sent first 
ContactGraphRouter.nextHopDestination = true
# two modes for cold spots: 0 for simple, 1 for complex where a path to the first hot spot is calculated
ContactGraphRouter.coldSpotMode = 1


## GUI settings

# GUI underlay image settings
#GUI.UnderlayImage.fileName = /home/jose/Programming/Java/the-one-scripts/data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 200
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
